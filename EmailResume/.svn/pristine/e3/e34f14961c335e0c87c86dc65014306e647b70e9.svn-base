package org.emailresume.controller;

import org.emailresume.common.Utils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.List;
import java.util.ArrayList;

import org.apache.log4j.Logger;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

@RestController
@RequestMapping(value = "/email")
public class EmailController {
    private static final Logger logger = Logger.getLogger(EmailController.class);
    private final String m_url = "jdbc:mysql://192.168.6.80:3306/email_resume?" + "user=root&password=root&useUnicode=true&characterEncoding=UTF8";

    @RequestMapping(value = "/errorList", method = RequestMethod.GET)
    public String getErrorList(@RequestParam(value="channel") String channel){
        JSONObject jsonObject = new JSONObject();
        if(channel.equals("")){
            jsonObject.put("status", "0");
            jsonObject.put("message", "channel参数错误");
            return jsonObject.toString();
        }

        Connection conn = null;
        List<String> emailList = new ArrayList<String>();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection(m_url);
            Statement stmt = conn.createStatement();

            String sql = String.format("select email from emailinfo where verify = '0' and channel = '%s'", channel);
            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()){
                emailList.add(rs.getString(1));
            }
            stmt.close();
            jsonObject.put("status", "1");
        }catch (Exception e){
            logger.error(e.toString());
            jsonObject.put("status", "0");
            jsonObject.put("message", "服务器内部错误");
        }finally {
            try {
                if(conn != null)
                    conn.close();
            }catch (Exception e){
                logger.error(e.toString());
            }
        }
        jsonObject.put("count", emailList.size());
        jsonObject.put("email", JSONArray.fromObject(emailList));
        return jsonObject.toString();
    }
}
